{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\Bc\\\\bakalarka\\\\appka\\\\race-react\\\\src\\\\components\\\\CreateRace.js\";\nimport '../styles/CreateRace.css';\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateRace extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      circuitId: \"\",\n      date: \"\",\n      eorDate: \"\",\n      classes: [],\n      maxDrivers: \"\",\n      fetchedCircuits: [],\n      circuitOptions: [],\n      profiledata: [],\n      classes: []\n    };\n    this.createRace = this.createRace.bind(this);\n  }\n\n  async fetchUser() {\n    let restURL = \"/rest/users/current\";\n    await fetch(restURL, {\n      method: \"GET\",\n      credentials: 'include',\n      headers: {\n        mode: 'no-cors',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState({\n        profiledata: data\n      });\n    });\n  }\n\n  async fetchCircuits() {\n    const restURL = \"/rest/circuits/\";\n    await fetch(restURL, {\n      headers: {\n        mode: 'no-cors',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      data.forEach(circuit => {\n        this.setState(prevState => ({\n          circuitOptions: [prevState.circuitOptions, /*#__PURE__*/_jsxDEV(\"option\", {\n            value: circuit.id,\n            children: [circuit.name, \" - \", circuit.location]\n          }, circuit.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 63\n          }, this)]\n        }));\n      });\n\n      if (data[0]) {\n        this.setState({\n          circuitId: data[0].id\n        });\n      }\n    });\n  }\n\n  async createRace(e) {\n    e.preventDefault();\n    const restURL = \"/rest/races/\";\n    await fetch(restURL, {\n      method: \"POST\",\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        maxDrivers: this.state.maxDrivers,\n        race_date: this.state.date,\n        eor_date: this.state.eorDate,\n        classes: this.state.classes,\n        organizor: {\n          id: this.state.profiledata.id\n        },\n        circuit: {\n          id: this.state.circuitId\n        }\n      })\n    }).then(response => {\n      if (response.status === 201) {\n        window.alert(\"Race created\");\n      } else {\n        window.alert(\"Something went wrong.\");\n      }\n    });\n  }\n\n  handleChangeName(value) {\n    this.setState({\n      name: value\n    });\n  }\n\n  handleChangeCircuit(value) {\n    this.setState({\n      circuitId: value\n    });\n  }\n\n  handleChangeDate(value) {\n    this.setState({\n      date: value\n    });\n  }\n\n  handleChangeEorDate(value) {\n    this.setState({\n      eorDate: value\n    });\n  }\n\n  handleChangeMaxDrivers(value) {\n    this.setState({\n      maxDrivers: value\n    });\n  }\n\n  handleChangeClasses(target) {\n    if (target.checked) {\n      this.state.classes.push(target.value);\n    } else {\n      for (var i = 0; i < this.state.classes.length; i++) {\n        if (this.state.classes[i] === target.value) {\n          this.state.classes.splice(i, 1);\n        }\n      }\n    }\n\n    console.log(this.state.classes);\n  }\n\n  componentDidMount() {\n    this.fetchCircuits();\n    this.fetchUser();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CreateRace\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a new race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Name : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.name,\n            className: \"name-input\",\n            onChange: event => this.handleChangeName(event.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circuit\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Circuit : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"circuit-select\",\n            className: \"circuit-select\",\n            onChange: event => this.handleChangeCircuit(event.target.value),\n            children: this.state.circuitOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Date : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: this.state.date,\n            className: \"date-input\",\n            onChange: event => this.handleChangeDate(event.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eorDate\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"End of registrations : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: this.state.eorDate,\n            className: \"eorDate-input\",\n            onChange: event => this.handleChangeEorDate(event.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"maxDrivers\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Max drivers : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: this.state.maxDrivers,\n            className: \"maxDrivers-input\",\n            onChange: event => this.handleChangeMaxDrivers(event.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"classes\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select classes : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: 'GT3',\n            onChange: event => this.handleChangeClasses(event.target)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), \"GT3\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: 'GT4',\n            onChange: event => this.handleChangeClasses(event.target)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), \"GT4\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: 'LMP2',\n            onChange: event => this.handleChangeClasses(event.target)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), \"LMP2\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: 'LMP1',\n            onChange: event => this.handleChangeClasses(event.target)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), \"LMP1\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"create-button\",\n          onClick: e => this.createRace(e),\n          children: \"Create race\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CreateRace;","map":{"version":3,"sources":["E:/School/Bc/bakalarka/appka/race-react/src/components/CreateRace.js"],"names":["React","Component","CreateRace","constructor","props","state","name","circuitId","date","eorDate","classes","maxDrivers","fetchedCircuits","circuitOptions","profiledata","createRace","bind","fetchUser","restURL","fetch","method","credentials","headers","mode","then","response","json","data","setState","fetchCircuits","forEach","circuit","prevState","id","location","e","preventDefault","body","JSON","stringify","race_date","eor_date","organizor","status","window","alert","handleChangeName","value","handleChangeCircuit","handleChangeDate","handleChangeEorDate","handleChangeMaxDrivers","handleChangeClasses","target","checked","push","i","length","splice","console","log","componentDidMount","render","event"],"mappings":"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","sourcesContent":["import '../styles/CreateRace.css';\r\nimport React, { Component } from \"react\";\r\n\r\nclass CreateRace extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            circuitId: \"\",\r\n            date: \"\",\r\n            eorDate: \"\",\r\n            classes: [],\r\n            maxDrivers: \"\",\r\n            fetchedCircuits: [],\r\n            circuitOptions: [],\r\n            profiledata: [],\r\n            classes: []\r\n        }\r\n        this.createRace = this.createRace.bind(this);\r\n    }\r\n    async fetchUser() {\r\n        let restURL = \"/rest/users/current\";\r\n        await fetch(restURL, {\r\n            method: \"GET\",\r\n            credentials: 'include',\r\n            headers: {\r\n                mode: 'no-cors',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                this.setState({ profiledata: data });\r\n            })\r\n    }\r\n    async fetchCircuits() {\r\n        const restURL = \"/rest/circuits/\";\r\n        await fetch(restURL, {\r\n            headers: {\r\n                mode: 'no-cors',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(data => {\r\n\r\n            data.forEach(circuit => {\r\n                this.setState(prevState =>\r\n                ({ circuitOptions: [prevState.circuitOptions, <option key={circuit.id} value={circuit.id}>{circuit.name} - {circuit.location}</ option>] }\r\n                ));\r\n            })\r\n            if (data[0]) {\r\n                this.setState({ circuitId: data[0].id });\r\n            }\r\n        })\r\n\r\n    }\r\n    async createRace(e) {\r\n        e.preventDefault();\r\n        const restURL = \"/rest/races/\";\r\n        await fetch(restURL, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                maxDrivers: this.state.maxDrivers,\r\n                race_date: this.state.date,\r\n                eor_date: this.state.eorDate,\r\n                classes: this.state.classes,\r\n                organizor: {\r\n                    id: this.state.profiledata.id\r\n                },\r\n                circuit: {\r\n                    id: this.state.circuitId\r\n                }\r\n            })\r\n        }).then(response => {\r\n            if (response.status === 201) {\r\n                window.alert(\"Race created\");\r\n            }\r\n            else {\r\n                window.alert(\"Something went wrong.\")\r\n            }\r\n        })\r\n    }\r\n    handleChangeName(value) {\r\n        this.setState({ name: value });\r\n    }\r\n    handleChangeCircuit(value) {\r\n        this.setState({ circuitId: value });\r\n    }\r\n    handleChangeDate(value) {\r\n        this.setState({ date: value });\r\n    }\r\n    handleChangeEorDate(value) {\r\n        this.setState({ eorDate: value });\r\n    }\r\n    handleChangeMaxDrivers(value) {\r\n        this.setState({ maxDrivers: value });\r\n    }\r\n    handleChangeClasses(target) {\r\n        if (target.checked) {\r\n            this.state.classes.push(target.value);\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.state.classes.length; i++) {\r\n                if (this.state.classes[i] === target.value) {\r\n                    this.state.classes.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        console.log(this.state.classes)\r\n    };\r\n    componentDidMount() {\r\n        this.fetchCircuits();\r\n        this.fetchUser();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CreateRace\">\r\n                <h2>Create a new race</h2>\r\n                <form>\r\n                    <div className=\"name\">\r\n                        <p>Name : </p>\r\n                        <input type=\"text\" value={this.state.name}\r\n                            className=\"name-input\"\r\n                            onChange={event => this.handleChangeName(event.target.value)} required/>\r\n                    </div>\r\n                    <div className=\"circuit\">\r\n                        <p>Circuit : </p>\r\n                        <select name=\"circuit-select\" className=\"circuit-select\"\r\n                            onChange={event => this.handleChangeCircuit(event.target.value)}>\r\n                            {this.state.circuitOptions}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"date\">\r\n                        <p>Date : </p>\r\n                        <input type=\"date\" value={this.state.date}\r\n                            className=\"date-input\"\r\n                            onChange={event => this.handleChangeDate(event.target.value)} required/>\r\n                    </div>\r\n                    <div className=\"eorDate\">\r\n                        <p>End of registrations : </p>\r\n                        <input type=\"date\" value={this.state.eorDate}\r\n                            className=\"eorDate-input\"\r\n                            onChange={event => this.handleChangeEorDate(event.target.value)} required/>\r\n                    </div>\r\n                    <div className=\"maxDrivers\">\r\n                        <p>Max drivers : </p>\r\n                        <input type=\"number\" value={this.state.maxDrivers}\r\n                            className=\"maxDrivers-input\"\r\n                            onChange={event => this.handleChangeMaxDrivers(event.target.value)} required/>\r\n                    </div>\r\n                    <div className=\"classes\">\r\n                        <p>Select classes : </p>\r\n                        <input type=\"checkbox\" value={'GT3'} onChange={event => this.handleChangeClasses(event.target)} />GT3\r\n                        <input type=\"checkbox\" value={'GT4'} onChange={event => this.handleChangeClasses(event.target)} />GT4\r\n                        <input type=\"checkbox\" value={'LMP2'} onChange={event => this.handleChangeClasses(event.target)} />LMP2\r\n                        <input type=\"checkbox\" value={'LMP1'} onChange={event => this.handleChangeClasses(event.target)} />LMP1\r\n                    </div>\r\n                    <button type=\"submit\" className=\"create-button\" onClick={e => this.createRace(e)}>Create race</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateRace;"]},"metadata":{},"sourceType":"module"}
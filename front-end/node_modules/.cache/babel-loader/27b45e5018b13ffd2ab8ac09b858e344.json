{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\Bc\\\\appka\\\\race-react\\\\src\\\\components\\\\Race.js\";\nimport './Race.css';\nimport React, { Component, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Race extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      race: \"\",\n      name: \"\",\n      maxDrivers: 0,\n      driver: \"\",\n      date: \"\",\n      eorDate: \"\",\n      circuitName: \"\",\n      regDrivers: 0\n    };\n  }\n\n  componentDidMount() {\n    const restURL = \"http://localhost:8081/race/rest/races/\" + this.props.raceId;\n    const [raceData, setRaceData] = useState([]);\n\n    const fetchData = () => {\n      fetch(restURL, {\n        headers: {\n          mode: 'no-cors',\n          method: \"GET\",\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        setRaceData(data);\n      });\n    };\n\n    fetchData();\n    this.state.race = raceData;\n    this.state.name = this.state.race.name;\n    this.state.maxDrivers = this.state.race.maxDrivers;\n    this.state.driver = \"\";\n    this.state.date = this.state.race.race_date;\n    this.state.eorDate = \"01-01-2022\";\n    this.state.circuitName = raceData.circuit.name;\n    this.state.regDrivers = raceData.results.length;\n\n    function Register(race, driver) {\n      return;\n    }\n\n    function Details(race) {\n      return;\n    }\n  }\n\n  render() {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"Race\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Name\",\n        children: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RegDrivers\",\n        children: [\"Registered : \", this.state.regDrivers, \" / \", this.state.maxDrivers]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Circuit\",\n        children: [\"Circuit : \", this.state.circuitName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Date\",\n        children: [\"Date of race : \", this.state.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"eorDate\",\n        children: [\"End of registrations : \", this.state.eorDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reg-button\",\n          onClick: () => {\n            Register(this.state.race, this.state.driver);\n          },\n          children: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"details-button\",\n          onClick: () => {\n            Details(this.state.race);\n          },\n          children: \"DETAILS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Race;","map":{"version":3,"sources":["E:/School/Bc/appka/race-react/src/components/Race.js"],"names":["React","Component","useEffect","useState","Race","constructor","props","state","race","name","maxDrivers","driver","date","eorDate","circuitName","regDrivers","componentDidMount","restURL","raceId","raceData","setRaceData","fetchData","fetch","headers","mode","method","then","response","json","data","race_date","circuit","results","length","Register","Details","render"],"mappings":"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","sourcesContent":["import './Race.css';\r\nimport React, { Component, useEffect, useState } from \"react\";\r\n\r\nclass Race extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            race : \"\",\r\n            name : \"\",\r\n            maxDrivers : 0,\r\n            driver : \"\",\r\n            date : \"\",\r\n            eorDate : \"\",\r\n            circuitName : \"\",\r\n            regDrivers : 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const restURL = \"http://localhost:8081/race/rest/races/\" + this.props.raceId;\r\n        \r\n    const [raceData, setRaceData] = useState([]);\r\n        const fetchData = () => {\r\n            fetch(restURL, {\r\n                headers: {\r\n                    mode: 'no-cors',\r\n                    method: \"GET\",\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n                .then(response => {\r\n                    return response.json()\r\n                })\r\n                .then(data => {\r\n                    setRaceData(data)\r\n                })\r\n        }\r\n        fetchData()\r\n        this.state.race = raceData;\r\n        this.state.name = this.state.race.name;\r\n        this.state.maxDrivers = this.state.race.maxDrivers;\r\n        this.state.driver = \"\";\r\n        this.state.date = this.state.race.race_date;\r\n        this.state.eorDate = \"01-01-2022\";\r\n        this.state.circuitName = raceData.circuit.name;\r\n        this.state.regDrivers = raceData.results.length;\r\n        function Register(race, driver) {\r\n            return;\r\n        }\r\n        function Details(race) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        <div className=\"Race\">\r\n            <p className='Name'>{this.state.name}</p>\r\n            <p className=\"RegDrivers\">Registered : {this.state.regDrivers} / {this.state.maxDrivers}</p>\r\n            <p className=\"Circuit\">Circuit : {this.state.circuitName}</p>\r\n            <p className=\"Date\">Date of race : {this.state.date}</p>\r\n            <p className=\"eorDate\">End of registrations : {this.state.eorDate}</p>\r\n            <div className=\"buttons\">\r\n                <button className='reg-button' onClick={() => {\r\n                    Register(this.state.race, this.state.driver);\r\n                }}>REGISTER</button>\r\n                <button className='details-button' onClick={() => {\r\n                    Details(this.state.race);\r\n                }}>DETAILS</button>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Race;"]},"metadata":{},"sourceType":"module"}
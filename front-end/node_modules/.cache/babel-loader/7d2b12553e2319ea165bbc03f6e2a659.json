{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\Bc\\\\appka\\\\race-react\\\\src\\\\components\\\\Race.js\",\n    _s = $RefreshSig$();\n\nimport './Race.css';\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Race = () => {\n  _s();\n\n  const restURL = 'http://localhost:8081/race/rest/races/2';\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(restURL, {\n      headers: {\n        mode: 'no-cors',\n        method: \"GET\",\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(data => {\n      setData(data);\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  console.log(data); //variables to load from rest\n\n  const name = data.name;\n  const race = \"\";\n  const regDrivers = 10;\n  const maxDrivers = 20;\n  const driver = \"\";\n  const circuit = \"Spa Francorshamps\";\n  const date = \"01-01-2022\";\n  const eorDate = \"01-01-2022\";\n\n  function Register(race, driver) {\n    return;\n  }\n\n  function Details(race) {\n    return;\n  }\n\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Race\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Name\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"RegDrivers\",\n      children: [\"Registered : \", regDrivers, \" / \", maxDrivers]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Circuit\",\n      children: [\"Circuit : \", circuit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Date\",\n      children: [\"Date of race : \", date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"eorDate\",\n      children: [\"End of registrations : \", eorDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reg-button\",\n        onClick: () => {\n          Register(race, driver);\n        },\n        children: \"REGISTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"details-button\",\n        onClick: () => {\n          Details(race);\n        },\n        children: \"DETAILS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Race, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\n\n_c = Race;\nexport default Race;\n\nvar _c;\n\n$RefreshReg$(_c, \"Race\");","map":{"version":3,"sources":["E:/School/Bc/appka/race-react/src/components/Race.js"],"names":["React","useEffect","useState","Race","restURL","data","setData","loading","setLoading","error","setError","fetch","headers","mode","method","then","response","ok","json","catch","console","finally","log","name","race","regDrivers","maxDrivers","driver","circuit","date","eorDate","Register","Details"],"mappings":"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","sourcesContent":["import './Race.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nconst Race = () => {\r\n\r\n    const restURL = 'http://localhost:8081/race/rest/races/2';\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        fetch(restURL, {\r\n            headers: {\r\n                mode: 'no-cors',\r\n                method: \"GET\",\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            }\r\n            throw response;\r\n          })\r\n          .then((data) => {\r\n            setData(data);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching data: \", error);\r\n            setError(error);\r\n          })\r\n          .finally(() => {\r\n            setLoading(false);\r\n          });\r\n      }, []);\r\n      console.log(data);\r\n\r\n    //variables to load from rest\r\n    const name = data.name;\r\n    const race = \"\";\r\n    const regDrivers = 10;\r\n    const maxDrivers = 20;\r\n    const driver = \"\";\r\n    const circuit = \"Spa Francorshamps\";\r\n    const date = \"01-01-2022\";\r\n    const eorDate = \"01-01-2022\";\r\n\r\n    function Register(race, driver) {\r\n        return;\r\n    }\r\n    function Details(race) {\r\n        return;\r\n    }\r\n    if (loading) return \"Loading...\";\r\n    if (error) return \"Error!\";\r\n    return (\r\n        <div className=\"Race\">\r\n            <p className='Name'>{name}</p>\r\n            <p className=\"RegDrivers\">Registered : {regDrivers} / {maxDrivers}</p>\r\n            <p className=\"Circuit\">Circuit : {circuit}</p>\r\n            <p className=\"Date\">Date of race : {date}</p>\r\n            <p className=\"eorDate\">End of registrations : {eorDate}</p>\r\n            <div className=\"buttons\">\r\n                <button className='reg-button' onClick={() => {\r\n                    Register(race, driver);\r\n                }}>REGISTER</button>\r\n                <button className='details-button' onClick={() => {\r\n                    Details(race);\r\n                }}>DETAILS</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Race;"]},"metadata":{},"sourceType":"module"}
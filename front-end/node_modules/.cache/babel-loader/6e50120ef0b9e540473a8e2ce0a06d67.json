{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\Bc\\\\appka\\\\race-react\\\\src\\\\components\\\\Race.js\";\nimport './Race.css';\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Race extends Component {\n  constructor(props) {\n    super(props);\n\n    this.Register = (race, driver) => {\n      return;\n    };\n\n    this.Details = race => {\n      return;\n    };\n\n    this.state = {\n      race: \"\",\n      name: \"\",\n      maxDrivers: 0,\n      driver: \"\",\n      date: \"\",\n      eorDate: \"\",\n      circuitName: \"\",\n      regDrivers: 0\n    };\n  }\n\n  async fetchData() {\n    const restURL = \"http://localhost:8081/race/rest/races/5\";\n    const raceData = await fetch(restURL, {\n      headers: {\n        mode: 'no-cors',\n        method: \"GET\",\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  componentDidMount() {\n    console.log(this.props.raceId);\n    this.fetchData();\n    this.setState({\n      name: this.state.race.name,\n      maxDrivers: this.state.race.maxDrivers,\n      driver: \"\",\n      date: this.state.race.race_date,\n      eorDate: \"01-01-2022\",\n      circuitName: this.state.race.circuit.name,\n      regDrivers: this.state.race.results.length\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Race\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Name\",\n        children: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RegDrivers\",\n        children: [\"Registered : \", this.state.regDrivers, \" / \", this.state.maxDrivers]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Circuit\",\n        children: [\"Circuit : \", this.state.circuitName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Date\",\n        children: [\"Date of race : \", this.state.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"eorDate\",\n        children: [\"End of registrations : \", this.state.eorDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reg-button\",\n          onClick: () => {\n            this.Register(this.state.race, this.state.driver);\n          },\n          children: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"details-button\",\n          onClick: () => {\n            this.Details(this.state.race);\n          },\n          children: \"DETAILS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Race;","map":{"version":3,"sources":["E:/School/Bc/appka/race-react/src/components/Race.js"],"names":["React","Component","Race","constructor","props","Register","race","driver","Details","state","name","maxDrivers","date","eorDate","circuitName","regDrivers","fetchData","restURL","raceData","fetch","headers","mode","method","componentDidMount","console","log","raceId","setState","race_date","circuit","results","length","render"],"mappings":"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","sourcesContent":["import './Race.css';\r\nimport React, { Component } from \"react\";\r\n\r\nclass Race extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =  {\r\n            race: \"\",\r\n            name: \"\",\r\n            maxDrivers: 0,\r\n            driver: \"\",\r\n            date: \"\",\r\n            eorDate: \"\",\r\n            circuitName: \"\",\r\n            regDrivers: 0,\r\n        };\r\n    }\r\n\r\n    async fetchData(){\r\n        const restURL = \"http://localhost:8081/race/rest/races/5\";\r\n            const raceData = await fetch(restURL, {\r\n                headers: {\r\n                    mode: 'no-cors',\r\n                    method: \"GET\",\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.raceId);\r\n        this.fetchData();\r\n        this.setState({\r\n            name : this.state.race.name,\r\n            maxDrivers : this.state.race.maxDrivers,\r\n            driver : \"\",\r\n            date : this.state.race.race_date,\r\n            eorDate : \"01-01-2022\",\r\n            circuitName : this.state.race.circuit.name,\r\n            regDrivers : this.state.race.results.length,\r\n        })\r\n        \r\n\r\n    }\r\n    Register = (race, driver) => {\r\n        return;\r\n    }\r\n    Details = (race) => {\r\n        return;\r\n    }\r\n    render() {\r\n        return (<div className=\"Race\">\r\n            <p className='Name'>{this.state.name}</p>\r\n            <p className=\"RegDrivers\">Registered : {this.state.regDrivers} / {this.state.maxDrivers}</p>\r\n            <p className=\"Circuit\">Circuit : {this.state.circuitName}</p>\r\n            <p className=\"Date\">Date of race : {this.state.date}</p>\r\n            <p className=\"eorDate\">End of registrations : {this.state.eorDate}</p>\r\n            <div className=\"buttons\">\r\n                <button className='reg-button' onClick={() => {\r\n                    this.Register(this.state.race, this.state.driver);\r\n                }}>REGISTER</button>\r\n                <button className='details-button' onClick={() => {\r\n                    this.Details(this.state.race);\r\n                }}>DETAILS</button>\r\n            </div>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Race;"]},"metadata":{},"sourceType":"module"}
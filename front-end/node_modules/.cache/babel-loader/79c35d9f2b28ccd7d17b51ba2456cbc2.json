{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\Bcc\\\\bakalarka\\\\appka\\\\race-react\\\\src\\\\pages\\\\Teams.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport '../styles/Teams.css';\nimport Team from \"../components/Team\";\nimport JoinRequest from \"../components/JoinRequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Teams() {\n  _s();\n\n  const [teams, setTeams] = useState([]);\n  const [profileData, setProfileData] = useState([]);\n  const [myTeam, setMyTeam] = useState([]);\n\n  async function fetchUser() {\n    let restURL = \"http://localhost:8081/race/rest/users/current\";\n    await fetch(restURL, {\n      method: \"GET\",\n      credentials: 'include',\n      headers: {\n        mode: 'no-cors',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setProfileData(data);\n    });\n  }\n\n  async function fetchMyTeam() {\n    let restURL = \"http://localhost:8081/race/rest/teams/myTeam\";\n    await fetch(restURL, {\n      method: \"GET\",\n      credentials: 'include',\n      headers: {\n        mode: 'no-cors',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setMyTeam(data);\n    });\n  }\n\n  async function fetchData() {\n    let restURL = \"http://localhost:8081/race/rest/teams/\";\n    await fetch(restURL, {\n      headers: {\n        method: \"GET\",\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setTeams(data);\n    });\n  }\n\n  useEffect(() => {\n    fetchMyTeam();\n    fetchData();\n    fetchUser();\n  }, []);\n\n  function renderMyTeam() {\n    if (myTeam.id != null) {\n      let joinRequests = [];\n      myTeam.joinRequests.forEach(req => {\n        if (req.status === \"PENDING\") {\n          joinRequests.push( /*#__PURE__*/_jsxDEV(JoinRequest, {\n            data: req,\n            team: myTeam\n          }, req.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 39\n          }, this));\n        }\n      });\n      let members = [];\n      myTeam.memberships.forEach(mem => {\n        if (mem.membershipsstate === 'ACTIVE') {\n          members.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [mem.user.firstName, \" \", mem.user.lastName]\n          }, mem.membershipId.membership_userid, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 34\n          }, this));\n        }\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myTeam\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Team\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Name\",\n            children: [\"Name : \", myTeam.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"MyTeammMebers\",\n            children: \"Members :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), members, /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"MyTeammRequests\",\n            children: \"Join requests :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), joinRequests]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  let teamList = [];\n  teams.forEach(team => {\n    teamList.push( /*#__PURE__*/_jsxDEV(Team, {\n      data: team,\n      user: profileData\n    }, team.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Teams\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/newTeam\",\n        children: \"NEW TEAM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), renderMyTeam(), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Other teams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), teamList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Teams, \"Kx0pGRF3272ktbgPVdDcENoG6SQ=\");\n\n_c = Teams;\nexport default Teams;\n\nvar _c;\n\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"sources":["E:/School/Bcc/bakalarka/appka/race-react/src/pages/Teams.js"],"names":["React","useEffect","useState","Team","JoinRequest","Teams","teams","setTeams","profileData","setProfileData","myTeam","setMyTeam","fetchUser","restURL","fetch","method","credentials","headers","mode","then","response","json","data","fetchMyTeam","fetchData","renderMyTeam","id","joinRequests","forEach","req","status","push","members","memberships","mem","membershipsstate","user","firstName","lastName","membershipId","membership_userid","name","teamList","team"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport '../styles/Teams.css';\r\nimport Team from \"../components/Team\";\r\nimport JoinRequest from \"../components/JoinRequest\";\r\n\r\nfunction Teams() {\r\n    const [teams, setTeams] = useState([])\r\n    const [profileData, setProfileData] = useState([])\r\n    const [myTeam, setMyTeam] = useState([])\r\n\r\n    async function fetchUser() {\r\n        let restURL = \"http://localhost:8081/race/rest/users/current\";\r\n        await fetch(restURL, {\r\n            method: \"GET\",\r\n            credentials: 'include',\r\n            headers: {\r\n                mode: 'no-cors',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                setProfileData(data);\r\n            })\r\n    }\r\n    async function fetchMyTeam() {\r\n        let restURL = \"http://localhost:8081/race/rest/teams/myTeam\";\r\n        await fetch(restURL, {\r\n            method: \"GET\",\r\n            credentials: 'include',\r\n            headers: {\r\n                mode: 'no-cors',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                setMyTeam(data);\r\n            })\r\n    }\r\n\r\n    async function fetchData() {\r\n        let restURL = \"http://localhost:8081/race/rest/teams/\";\r\n        await fetch(restURL, {\r\n            headers: {\r\n                method: \"GET\",\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                setTeams(data)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchMyTeam()\r\n        fetchData()\r\n        fetchUser()\r\n    }, [])\r\n\r\n\r\n\r\n    function renderMyTeam() {\r\n        if (myTeam.id != null) {\r\n            let joinRequests = []\r\n            myTeam.joinRequests.forEach(req => {\r\n                if (req.status === \"PENDING\") {\r\n                    joinRequests.push(<JoinRequest key={req.id} data={req} team={myTeam} />)\r\n                }\r\n\r\n            })\r\n\r\n            let members = []\r\n            myTeam.memberships.forEach(mem => {\r\n                if (mem.membershipsstate === 'ACTIVE') {\r\n                    members.push(<p key={mem.membershipId.membership_userid}>{mem.user.firstName} {mem.user.lastName}</p>)\r\n                }\r\n            })\r\n            return (\r\n                <div className=\"myTeam\">\r\n                    <h2>My team</h2>\r\n                    <div className=\"Team\">\r\n                        <p className=\"Name\">\r\n                            Name : {myTeam.name}\r\n                        </p>\r\n                        <p className=\"MyTeammMebers\">\r\n                            Members :\r\n                        </p>\r\n                        {members}\r\n                        <p className=\"MyTeammRequests\">\r\n                            Join requests :\r\n                        </p>\r\n                        {joinRequests}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n    let teamList = [];\r\n    teams.forEach(team => {\r\n        teamList.push(\r\n            <Team key={team.id} data={team} user={profileData} />\r\n        )\r\n    });\r\n    return (\r\n        <div className=\"Page\">\r\n            <div className=\"Teams\">\r\n                <a href=\"/newTeam\">NEW TEAM</a>\r\n                {renderMyTeam()}\r\n                <h2>Other teams</h2>\r\n                {teamList}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Teams;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\Bc\\\\appka\\\\race-react\\\\src\\\\components\\\\Race.js\",\n    _s = $RefreshSig$();\n\nimport './Race.css';\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Race = () => {\n  _s();\n\n  const restURL = \"http://localhost:8081/race/rest/races/5\";\n  const [raceData, setRaceData] = useState([]);\n  const [circuit, setCircuit] = useState([]);\n\n  const fetchData = () => {\n    fetch(restURL, {\n      headers: {\n        mode: 'no-cors',\n        method: \"GET\",\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setRaceData(raceData);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const race = raceData;\n  console.log(race);\n  const name = race.name;\n  let regDrivers = race.results.length;\n  const maxDrivers = race.maxDrivers;\n  const driver = \"\";\n  setCircuit(race.circuit);\n  const date = race.race_date;\n  const eorDate = \"01-01-2022\";\n\n  function Register(race, driver) {\n    return;\n  }\n\n  function Details(race) {\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Race\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Name\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"RegDrivers\",\n      children: [\"Registered : \", regDrivers, \" / \", maxDrivers]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Circuit\",\n      children: [\"Circuit : \", circuit.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Date\",\n      children: [\"Date of race : \", date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"eorDate\",\n      children: [\"End of registrations : \", eorDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reg-button\",\n        onClick: () => {\n          Register(race, driver);\n        },\n        children: \"REGISTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"details-button\",\n        onClick: () => {\n          Details(race);\n        },\n        children: \"DETAILS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Race, \"pq1k+4PUbTQBYYUPJmJUn/YCoZs=\");\n\n_c = Race;\nexport default Race;\n\nvar _c;\n\n$RefreshReg$(_c, \"Race\");","map":{"version":3,"sources":["E:/School/Bc/appka/race-react/src/components/Race.js"],"names":["React","useEffect","useState","Race","restURL","raceData","setRaceData","circuit","setCircuit","fetchData","fetch","headers","mode","method","then","response","json","data","race","console","log","name","regDrivers","results","length","maxDrivers","driver","date","race_date","eorDate","Register","Details"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAMC,OAAO,GAAG,yCAAhB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AACE,QAAMO,SAAS,GAAG,MAAM;AACtBC,IAAAA,KAAK,CAACN,OAAD,EAAU;AACXO,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAE,SADD;AAELC,QAAAA,MAAM,EAAE,KAFH;AAGL,wBAAgB;AAHX;AADE,KAAV,CAAL,CAOGC,IAPH,CAOQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KATH,EAUGF,IAVH,CAUQG,IAAI,IAAI;AACZX,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAZH;AAaD,GAdD;;AAgBAJ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIF,QAAMS,IAAI,GAAGb,QAAb;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMG,IAAI,GAAGH,IAAI,CAACG,IAAlB;AAEA,MAAIC,UAAU,GAAGJ,IAAI,CAACK,OAAL,CAAaC,MAA9B;AACA,QAAMC,UAAU,GAAGP,IAAI,CAACO,UAAxB;AACA,QAAMC,MAAM,GAAG,EAAf;AACAlB,EAAAA,UAAU,CAACU,IAAI,CAACX,OAAN,CAAV;AACA,QAAMoB,IAAI,GAAGT,IAAI,CAACU,SAAlB;AACA,QAAMC,OAAO,GAAG,YAAhB;;AAEA,WAASC,QAAT,CAAkBZ,IAAlB,EAAwBQ,MAAxB,EAAgC;AAC5B;AACH;;AACD,WAASK,OAAT,CAAiBb,IAAjB,EAAuB;AACnB;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,gBAAqBG;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,kCAAwCC,UAAxC,SAAuDG,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA,+BAAkClB,OAAO,CAACc,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,oCAAoCM,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA,4CAA+CE,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAE,MAAM;AAC1CC,UAAAA,QAAQ,CAACZ,IAAD,EAAOQ,MAAP,CAAR;AACH,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAE,MAAM;AAC9CK,UAAAA,OAAO,CAACb,IAAD,CAAP;AACH,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA5DD;;GAAMf,I;;KAAAA,I;AA8DN,eAAeA,IAAf","sourcesContent":["import './Race.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nconst Race = () => {\r\n\r\n    const restURL = \"http://localhost:8081/race/rest/races/5\";\r\n    const [raceData, setRaceData] = useState([])\r\n    const [circuit, setCircuit] = useState([])\r\n      const fetchData = () => {\r\n        fetch(restURL, {\r\n            headers: {\r\n                mode: 'no-cors',\r\n                method: \"GET\",\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n          .then(response => {\r\n            return response.json()\r\n          })\r\n          .then(data => {\r\n            setRaceData(raceData)\r\n          })\r\n      }\r\n    \r\n      useEffect(() => {\r\n        fetchData()\r\n      }, [])\r\n    \r\n    const race = raceData;\r\n    console.log(race);\r\n    const name = race.name;\r\n    \r\n    let regDrivers = race.results.length;\r\n    const maxDrivers = race.maxDrivers;\r\n    const driver = \"\";\r\n    setCircuit(race.circuit);\r\n    const date = race.race_date;\r\n    const eorDate = \"01-01-2022\";\r\n\r\n    function Register(race, driver) {\r\n        return;\r\n    }\r\n    function Details(race) {\r\n        return;\r\n    }\r\n    return (\r\n        <div className=\"Race\">\r\n            <p className='Name'>{name}</p>\r\n            <p className=\"RegDrivers\">Registered : {regDrivers} / {maxDrivers}</p>\r\n            <p className=\"Circuit\">Circuit : {circuit.name}</p>\r\n            <p className=\"Date\">Date of race : {date}</p>\r\n            <p className=\"eorDate\">End of registrations : {eorDate}</p>\r\n            <div className=\"buttons\">\r\n                <button className='reg-button' onClick={() => {\r\n                    Register(race, driver);\r\n                }}>REGISTER</button>\r\n                <button className='details-button' onClick={() => {\r\n                    Details(race);\r\n                }}>DETAILS</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Race;"]},"metadata":{},"sourceType":"module"}
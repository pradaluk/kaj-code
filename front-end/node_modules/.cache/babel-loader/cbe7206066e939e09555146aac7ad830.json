{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\Bc\\\\appka\\\\race-react\\\\src\\\\components\\\\pages\\\\Home.js\";\nimport CreateRace from '../CreateRace';\nimport AddCircuit from \"../AddCircuit\";\nimport { Component } from \"react\";\nimport ReactFileReader from 'react-file-reader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFiles = files => {\n      console.log(files.fileList);\n    };\n\n    this.state = {\n      isLoggedIn: false,\n      profileData: []\n    };\n  }\n\n  async checkLoggedIn() {\n    let restURL = \"http://localhost:8081/race/rest/users/isLoggedIn\";\n    await fetch(restURL, {\n      method: \"GET\",\n      credentials: 'include',\n      headers: {\n        mode: 'no-cors',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState({\n        isLoggedIn: data\n      });\n    });\n    this.fetchUser();\n  }\n\n  componentDidMount() {\n    this.checkLoggedIn();\n  }\n\n  async fetchUser() {\n    if (this.state.isLoggedIn) {\n      let restURL = \"http://localhost:8081/race/rest/users/current\";\n      await fetch(restURL, {\n        method: \"GET\",\n        credentials: 'include',\n        headers: {\n          mode: 'no-cors',\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        this.setState({\n          profileData: data\n        });\n      });\n    }\n  }\n\n  render() {\n    if (this.state.isLoggedIn) {\n      console.log(this.state.profileData);\n\n      if (this.state.profileData.role === \"ADMIN\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Home\",\n          children: [/*#__PURE__*/_jsxDEV(CreateRace, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddCircuit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this);\n      } else if (this.state.profileData.role === \"ORGANIZOR\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Home\",\n          children: /*#__PURE__*/_jsxDEV(CreateRace, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to the app\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(ReactFileReader, {\n          fileTypes: [\".txt\"],\n          base64: true,\n          multipleFiles: false,\n          handleFiles: this.handleFiles,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["E:/School/Bc/appka/race-react/src/components/pages/Home.js"],"names":["CreateRace","AddCircuit","Component","ReactFileReader","Home","constructor","props","handleFiles","files","console","log","fileList","state","isLoggedIn","profileData","checkLoggedIn","restURL","fetch","method","credentials","headers","mode","then","response","json","data","setState","fetchUser","componentDidMount","render","role"],"mappings":"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","sourcesContent":["\r\nimport CreateRace from '../CreateRace';\r\nimport AddCircuit from \"../AddCircuit\";\r\nimport { Component } from \"react\";\r\nimport ReactFileReader from 'react-file-reader';\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoggedIn: false,\r\n      profileData: [],\r\n    }\r\n  }\r\n  async checkLoggedIn() {\r\n    let restURL = \"http://localhost:8081/race/rest/users/isLoggedIn\";\r\n    await fetch(restURL, {\r\n      method: \"GET\",\r\n      credentials: 'include',\r\n      headers: {\r\n        mode: 'no-cors',\r\n        'Content-Type': 'application/json',\r\n      }\r\n    })\r\n      .then(response => {\r\n        return response.json()\r\n      })\r\n      .then(data => {\r\n        this.setState({ isLoggedIn: data });\r\n      })\r\n    this.fetchUser()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkLoggedIn()\r\n  }\r\n\r\n  async fetchUser() {\r\n    if (this.state.isLoggedIn) {\r\n      let restURL = \"http://localhost:8081/race/rest/users/current\";\r\n      await fetch(restURL, {\r\n        method: \"GET\",\r\n        credentials: 'include',\r\n        headers: {\r\n          mode: 'no-cors',\r\n          'Content-Type': 'application/json',\r\n        }\r\n      })\r\n        .then(response => {\r\n          return response.json()\r\n        })\r\n        .then(data => {\r\n          this.setState({ profileData: data });\r\n        })\r\n    }\r\n  }\r\n\r\n  handleFiles = files =>{\r\n    console.log(files.fileList)\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoggedIn) {\r\n      console.log(this.state.profileData)\r\n      if (this.state.profileData.role === \"ADMIN\") {\r\n        return (\r\n          <div className=\"Home\">\r\n            <CreateRace />\r\n            <AddCircuit />\r\n          </div>\r\n        );\r\n      } else if (this.state.profileData.role === \"ORGANIZOR\") {\r\n        return (\r\n          <div className=\"Home\">\r\n            <CreateRace />\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <div><h2>Welcome to the app</h2>\r\n        <ReactFileReader fileTypes={[\".txt\"]} base64={true} multipleFiles={false} handleFiles={this.handleFiles}>\r\n          <button className='btn'>Upload</button>\r\n        </ReactFileReader>\r\n        </div>\r\n      \r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\Bc\\\\appka\\\\race-react\\\\src\\\\components\\\\CreateRace.js\";\nimport './CreateRace.css';\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateRace extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      circuitId: -1,\n      date: \"\",\n      eorDate: \"\",\n      classes: [],\n      maxDrivers: 0,\n      fetchedCircuits: [],\n      circuitOptions: []\n    };\n    this.createRace = this.createRace.bind(this);\n  }\n\n  async fetchCircuits() {\n    const restURL = \"http://localhost:8081/race/rest/circuits/\";\n    await fetch(restURL, {\n      headers: {\n        mode: 'no-cors',\n        method: \"GET\",\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState({\n        fetchedCircuits: data\n      });\n    });\n    this.state.fetchedCircuits.forEach(circuit => {\n      this.setState(prevState => ({\n        circuitOptions: [prevState.circuitOptions, /*#__PURE__*/_jsxDEV(\"option\", {\n          value: circuit.id,\n          children: [circuit.name, \" - \", circuit.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 59\n        }, this)]\n      }));\n    });\n  }\n\n  createRace() {\n    const restURL = \"http://localhost:8081/race/rest/races/\";\n    fetch(restURL, {\n      method: \"POST\",\n      headers: {\n        mode: 'no-cors',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        maxDrivers: this.state.maxDrivers,\n        race_date: this.state.date,\n        drivers: [],\n        organizor: {\n          id: 51\n        },\n        circuit: {\n          id: this.state.circuitId\n        }\n      })\n    });\n  }\n\n  handleChangeName(value) {\n    this.setState({\n      name: value\n    });\n  }\n\n  handleChangeCircuit(value) {\n    this.setState({\n      circuitId: value\n    });\n  }\n\n  handleChangeDate(value) {\n    this.setState({\n      date: value\n    });\n  }\n\n  handleChangeEorDate(value) {\n    this.setState({\n      eorDate: value\n    });\n  }\n\n  handleChangeMaxDrivers(value) {\n    this.setState({\n      maxDrivers: value\n    });\n  }\n\n  componentDidMount() {\n    this.fetchCircuits();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CreateRace\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a new race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Name : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.name,\n          className: \"name-input\",\n          onChange: event => this.handleChangeName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circuit\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Circuit : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"circuit-select\",\n          className: \"circuit-select\",\n          onChange: event => this.handleChangeCircuit(event.target.value),\n          children: this.state.circuitOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Date : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: this.state.date,\n          className: \"date-input\",\n          onChange: event => this.handleChangeDate(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eorDate\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"End of registrations : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: this.state.eorDate,\n          className: \"eorDate-input\",\n          onChange: event => this.handleChangeEorDate(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"maxDrivers\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Max drivers : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: this.state.maxDrivers,\n          className: \"maxDrivers-input\",\n          onChange: event => this.handleChangeMaxDrivers(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-button\",\n        onClick: this.createRace,\n        children: \"Create race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CreateRace;","map":{"version":3,"sources":["E:/School/Bc/appka/race-react/src/components/CreateRace.js"],"names":["React","Component","CreateRace","constructor","props","state","name","circuitId","date","eorDate","classes","maxDrivers","fetchedCircuits","circuitOptions","createRace","bind","fetchCircuits","restURL","fetch","headers","mode","method","then","response","json","data","setState","forEach","circuit","prevState","id","location","body","JSON","stringify","race_date","drivers","organizor","handleChangeName","value","handleChangeCircuit","handleChangeDate","handleChangeEorDate","handleChangeMaxDrivers","componentDidMount","render","event","target"],"mappings":"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","sourcesContent":["import './CreateRace.css';\r\nimport React, { Component } from \"react\";\r\n\r\nclass CreateRace extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            circuitId: -1,\r\n            date: \"\",\r\n            eorDate: \"\",\r\n            classes: [],\r\n            maxDrivers: 0,\r\n            fetchedCircuits: [],\r\n            circuitOptions: []\r\n        }\r\n        this.createRace = this.createRace.bind(this);\r\n    }\r\n\r\n    async fetchCircuits() {\r\n        const restURL = \"http://localhost:8081/race/rest/circuits/\";\r\n        await fetch(restURL, {\r\n            headers: {\r\n                mode: 'no-cors',\r\n                method: \"GET\",\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(data => {\r\n            this.setState({ fetchedCircuits: data });\r\n        })\r\n        this.state.fetchedCircuits.forEach(circuit => {\r\n            this.setState(prevState =>\r\n            ({ circuitOptions: [prevState.circuitOptions, <option value={circuit.id}>{circuit.name} - {circuit.location}</ option>] }\r\n            ));\r\n        })\r\n    }\r\n    createRace() {\r\n        const restURL = \"http://localhost:8081/race/rest/races/\";\r\n        fetch(restURL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                mode: 'no-cors',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                maxDrivers: this.state.maxDrivers,\r\n                race_date: this.state.date,\r\n                drivers: [],\r\n                organizor: {\r\n                    id: 51\r\n                },\r\n                circuit: {\r\n                    id: this.state.circuitId\r\n                }\r\n\r\n            })\r\n        })\r\n    }\r\n    handleChangeName(value) {\r\n        this.setState({ name: value });\r\n    }\r\n    handleChangeCircuit(value) {\r\n        this.setState({ circuitId: value });\r\n    }\r\n    handleChangeDate(value) {\r\n        this.setState({ date: value });\r\n    }\r\n    handleChangeEorDate(value) {\r\n        this.setState({ eorDate: value });\r\n    }\r\n    handleChangeMaxDrivers(value) {\r\n        this.setState({ maxDrivers: value });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchCircuits();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CreateRace\">\r\n                <h2>Create a new race</h2>\r\n                <div className=\"name\">\r\n                    <p>Name : </p>\r\n                    <input type=\"text\" value={this.state.name}\r\n                        className=\"name-input\"\r\n                        onChange={event => this.handleChangeName(event.target.value)} />\r\n                </div>\r\n                <div className=\"circuit\">\r\n                    <p>Circuit : </p>\r\n                    <select name=\"circuit-select\" className=\"circuit-select\"\r\n                        onChange={event => this.handleChangeCircuit(event.target.value)}>\r\n                        {this.state.circuitOptions}\r\n                    </select>\r\n                </div>\r\n                <div className=\"date\">\r\n                    <p>Date : </p>\r\n                    <input type=\"date\" value={this.state.date}\r\n                        className=\"date-input\"\r\n                        onChange={event => this.handleChangeDate(event.target.value)} />\r\n                </div>\r\n                <div className=\"eorDate\">\r\n                    <p>End of registrations : </p>\r\n                    <input type=\"date\" value={this.state.eorDate}\r\n                        className=\"eorDate-input\"\r\n                        onChange={event => this.handleChangeEorDate(event.target.value)} />\r\n                </div>\r\n                <div className=\"maxDrivers\">\r\n                    <p>Max drivers : </p>\r\n                    <input type=\"number\" value={this.state.maxDrivers}\r\n                        className=\"maxDrivers-input\"\r\n                        onChange={event => this.handleChangeMaxDrivers(event.target.value)} />\r\n                </div>\r\n                <button className=\"create-button\" onClick={this.createRace}>Create race</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateRace;"]},"metadata":{},"sourceType":"module"}
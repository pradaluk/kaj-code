{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\Bc\\\\appka\\\\race-react\\\\src\\\\components\\\\Race.js\";\nimport './Race.css';\nimport React, { Component, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Race extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const restURL = \"http://localhost:8081/race/rest/races/\" + props.data;\n    const [raceData, setRaceData] = useState([]);\n\n    const fetchData = () => {\n      fetch(restURL, {\n        headers: {\n          mode: 'no-cors',\n          method: \"GET\",\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        setRaceData(data);\n      });\n    };\n\n    fetchData();\n    this.race = raceData;\n    this.name = race.name;\n    this.maxDrivers = race.maxDrivers;\n    this.driver = \"\";\n    this.date = race.race_date;\n    this.eorDate = \"01-01-2022\";\n    this.circuitName = raceData.circuit.name;\n    this.regDrivers = raceData.results.length;\n\n    function Register(race, driver) {\n      return;\n    }\n\n    function Details(race) {\n      return;\n    }\n  }\n\n  render() {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"Race\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RegDrivers\",\n        children: [\"Registered : \", regDrivers, \" / \", maxDrivers]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Circuit\",\n        children: [\"Circuit : \", circuitName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Date\",\n        children: [\"Date of race : \", date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"eorDate\",\n        children: [\"End of registrations : \", eorDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reg-button\",\n          onClick: () => {\n            Register(race, driver);\n          },\n          children: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"details-button\",\n          onClick: () => {\n            Details(race);\n          },\n          children: \"DETAILS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Race;","map":{"version":3,"sources":["E:/School/Bc/appka/race-react/src/components/Race.js"],"names":["React","Component","useEffect","useState","Race","constructor","props","componentDidMount","restURL","data","raceData","setRaceData","fetchData","fetch","headers","mode","method","then","response","json","race","name","maxDrivers","driver","date","race_date","eorDate","circuitName","circuit","regDrivers","results","length","Register","Details","render"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;;;AACA,MAAMC,IAAN,SAAmBJ,KAAK,CAACC,SAAzB,CAAmC;AAE/BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,OAAO,GAAG,2CAA2CF,KAAK,CAACG,IAAjE;AACA,UAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;;AACA,UAAMS,SAAS,GAAG,MAAM;AACpBC,MAAAA,KAAK,CAACL,OAAD,EAAU;AACXM,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE,SADD;AAELC,UAAAA,MAAM,EAAE,KAFH;AAGL,0BAAgB;AAHX;AADE,OAAV,CAAL,CAOKC,IAPL,CAOUC,QAAQ,IAAI;AACd,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OATL,EAUKF,IAVL,CAUUR,IAAI,IAAI;AACVE,QAAAA,WAAW,CAACF,IAAD,CAAX;AACH,OAZL;AAaH,KAdD;;AAeAG,IAAAA,SAAS;AACT,SAAKQ,IAAL,GAAYV,QAAZ;AACA,SAAKW,IAAL,GAAYD,IAAI,CAACC,IAAjB;AACA,SAAKC,UAAL,GAAkBF,IAAI,CAACE,UAAvB;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,IAAL,GAAYJ,IAAI,CAACK,SAAjB;AACA,SAAKC,OAAL,GAAe,YAAf;AACA,SAAKC,WAAL,GAAmBjB,QAAQ,CAACkB,OAAT,CAAiBP,IAApC;AACA,SAAKQ,UAAL,GAAkBnB,QAAQ,CAACoB,OAAT,CAAiBC,MAAnC;;AACA,aAASC,QAAT,CAAkBZ,IAAlB,EAAwBG,MAAxB,EAAgC;AAC5B;AACH;;AACD,aAASU,OAAT,CAAiBb,IAAjB,EAAuB;AACnB;AACH;AACJ;;AAEDc,EAAAA,MAAM,GAAG;AAEL;AAAA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,kBAAqBb;AAArB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA,oCAAwCQ,UAAxC,SAAuDP,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA,iCAAkCK,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,sCAAoCH,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA,8CAA+CE,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAE,MAAM;AAC1CM,YAAAA,QAAQ,CAACZ,IAAD,EAAOG,MAAP,CAAR;AACH,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAE,MAAM;AAC9CU,YAAAA,OAAO,CAACb,IAAD,CAAP;AACH,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBH;;AA3D8B;;AA8DnC,eAAehB,IAAf","sourcesContent":["import './Race.css';\r\nimport React, { Component, useEffect, useState } from \"react\";\r\nclass Race extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const restURL = \"http://localhost:8081/race/rest/races/\" + props.data;\r\n        const [raceData, setRaceData] = useState([])\r\n        const fetchData = () => {\r\n            fetch(restURL, {\r\n                headers: {\r\n                    mode: 'no-cors',\r\n                    method: \"GET\",\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n                .then(response => {\r\n                    return response.json()\r\n                })\r\n                .then(data => {\r\n                    setRaceData(data)\r\n                })\r\n        }\r\n        fetchData()\r\n        this.race = raceData;\r\n        this.name = race.name;\r\n        this.maxDrivers = race.maxDrivers;\r\n        this.driver = \"\";\r\n        this.date = race.race_date;\r\n        this.eorDate = \"01-01-2022\";\r\n        this.circuitName = raceData.circuit.name;\r\n        this.regDrivers = raceData.results.length;\r\n        function Register(race, driver) {\r\n            return;\r\n        }\r\n        function Details(race) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        <div className=\"Race\">\r\n            <p className='Name'>{name}</p>\r\n            <p className=\"RegDrivers\">Registered : {regDrivers} / {maxDrivers}</p>\r\n            <p className=\"Circuit\">Circuit : {circuitName}</p>\r\n            <p className=\"Date\">Date of race : {date}</p>\r\n            <p className=\"eorDate\">End of registrations : {eorDate}</p>\r\n            <div className=\"buttons\">\r\n                <button className='reg-button' onClick={() => {\r\n                    Register(race, driver);\r\n                }}>REGISTER</button>\r\n                <button className='details-button' onClick={() => {\r\n                    Details(race);\r\n                }}>DETAILS</button>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Race;"]},"metadata":{},"sourceType":"module"}
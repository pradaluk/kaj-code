{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\Bc\\\\appka\\\\race-react\\\\src\\\\components\\\\CreateRace.js\";\nimport './CreateRace.css';\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateRace extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      circuitId: -1,\n      date: \"\",\n      eorDate: \"\",\n      classes: [],\n      maxDrivers: 0,\n      fetchedCircuits: []\n    };\n    this.createRace = this.createRace.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCircuits();\n    let circuitOptions = [];\n    this.fetchedCircuits.forEach(circuit => {\n      circuitOptions.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: circuit.id,\n        children: circuit.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this));\n    });\n  }\n\n  fetchCircuits() {\n    const restURL = \"http://localhost:8081/race/rest/circuits/\";\n    fetch(restURL, {\n      headers: {\n        mode: 'no-cors',\n        method: \"GET\",\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState({\n        fetchedCircuits: data\n      });\n    });\n  }\n\n  createRace() {\n    const restURL = \"http://localhost:8081/race/rest/races/\";\n    fetch(restURL, {\n      headers: {\n        mode: 'no-cors',\n        method: \"POST\"\n      },\n      body: {}\n    });\n  }\n\n  handleChangeName(value) {\n    this.setState({\n      name: value\n    });\n  }\n\n  handleChangeCircuit(value) {\n    this.setState({\n      circuit: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CreateRace\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Name : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.name,\n          className: \"name-input\",\n          onChange: event => this.handleChangeName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circuit\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Circuit : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"circuit-select\",\n          className: \"circuit-select\",\n          onChange: event => this.handleChangeCircuit(event.target.value),\n          children: circuitOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-button\",\n        onClick: this.createRace,\n        children: \"Create race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CreateRace;","map":{"version":3,"sources":["E:/School/Bc/appka/race-react/src/components/CreateRace.js"],"names":["React","Component","CreateRace","constructor","props","state","name","circuitId","date","eorDate","classes","maxDrivers","fetchedCircuits","createRace","bind","componentDidMount","fetchCircuits","circuitOptions","forEach","circuit","push","id","restURL","fetch","headers","mode","method","then","response","json","data","setState","body","handleChangeName","value","handleChangeCircuit","render","event","target"],"mappings":"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","sourcesContent":["import './CreateRace.css';\r\nimport React, { Component } from \"react\";\r\n\r\nclass CreateRace extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            circuitId: -1,\r\n            date: \"\",\r\n            eorDate: \"\",\r\n            classes: [],\r\n            maxDrivers: 0,\r\n            fetchedCircuits: []\r\n        }\r\n        this.createRace = this.createRace.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchCircuits();\r\n        let circuitOptions = [];\r\n        this.fetchedCircuits.forEach(circuit => {\r\n            circuitOptions.push(\r\n                <option value={circuit.id}>{circuit.name}</ option>\r\n            )\r\n        });\r\n    }\r\n    fetchCircuits() {\r\n        const restURL = \"http://localhost:8081/race/rest/circuits/\";\r\n        fetch(restURL, {\r\n            headers: {\r\n                mode: 'no-cors',\r\n                method: \"GET\",\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        })\r\n            .then(data => {\r\n                this.setState({ fetchedCircuits: data })\r\n            })\r\n    }\r\n    createRace() {\r\n        const restURL = \"http://localhost:8081/race/rest/races/\";\r\n        fetch(restURL, {\r\n            headers: {\r\n                mode: 'no-cors',\r\n                method: \"POST\",\r\n            },\r\n            body: {\r\n\r\n            }\r\n        })\r\n    }\r\n    handleChangeName(value) {\r\n        this.setState({ name: value });\r\n    }\r\n    handleChangeCircuit(value) {\r\n        this.setState({ circuit: value });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"CreateRace\">\r\n                <h2>Login</h2>\r\n                <div className=\"name\">\r\n                    <p>Name : </p>\r\n                    <input type=\"text\" value={this.state.name} className=\"name-input\" onChange={event => this.handleChangeName(event.target.value)} />\r\n                </div>\r\n                <div className=\"circuit\">\r\n                    <p>Circuit : </p>\r\n                    <select name=\"circuit-select\" className=\"circuit-select\"\r\n                        onChange={event => this.handleChangeCircuit(event.target.value)}>\r\n                        {circuitOptions}\r\n                    </select>\r\n                </div>\r\n\r\n                <button className=\"create-button\" onClick={this.createRace}>Create race</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateRace;"]},"metadata":{},"sourceType":"module"}
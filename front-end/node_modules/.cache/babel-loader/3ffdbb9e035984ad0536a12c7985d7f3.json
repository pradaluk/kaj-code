{"ast":null,"code":"import _asyncToGenerator from\"E:/School/Bc/bakalarka/appka/race-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"E:/School/Bc/bakalarka/appka/race-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _classCallCheck from\"E:/School/Bc/bakalarka/appka/race-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"E:/School/Bc/bakalarka/appka/race-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"E:/School/Bc/bakalarka/appka/race-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"E:/School/Bc/bakalarka/appka/race-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"E:/School/Bc/bakalarka/appka/race-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _regeneratorRuntime from\"E:\\\\School\\\\Bc\\\\bakalarka\\\\appka\\\\race-react\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import'../styles/CreateRace.css';import React,{Component}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var CreateRace=/*#__PURE__*/function(_Component){_inherits(CreateRace,_Component);var _super=_createSuper(CreateRace);function CreateRace(props){var _this;_classCallCheck(this,CreateRace);_this=_super.call(this,props);_this.state=_defineProperty({name:\"\",circuitId:\"\",date:\"\",eorDate:\"\",classes:[],maxDrivers:\"\",fetchedCircuits:[],circuitOptions:[],profiledata:[]},\"classes\",[]);_this.createRace=_this.createRace.bind(_assertThisInitialized(_this));return _this;}_createClass(CreateRace,[{key:\"fetchUser\",value:function(){var _fetchUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this2=this;var restURL;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:restURL=\"/rest/users/current\";_context.next=3;return fetch(restURL,{method:\"GET\",credentials:'include',headers:{mode:'no-cors','Content-Type':'application/json'}}).then(function(response){return response.json();}).then(function(data){_this2.setState({profiledata:data});});case 3:case\"end\":return _context.stop();}}},_callee);}));function fetchUser(){return _fetchUser.apply(this,arguments);}return fetchUser;}()},{key:\"fetchCircuits\",value:function(){var _fetchCircuits=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _this3=this;var restURL;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:restURL=\"/rest/circuits/\";_context2.next=3;return fetch(restURL,{headers:{mode:'no-cors','Content-Type':'application/json'}}).then(function(response){return response.json();}).then(function(data){data.forEach(function(circuit){_this3.setState(function(prevState){return{circuitOptions:[prevState.circuitOptions,/*#__PURE__*/_jsxs(\"option\",{value:circuit.id,children:[circuit.name,\" - \",circuit.location]},circuit.id)]};});});if(data[0]){_this3.setState({circuitId:data[0].id});}});case 3:case\"end\":return _context2.stop();}}},_callee2);}));function fetchCircuits(){return _fetchCircuits.apply(this,arguments);}return fetchCircuits;}()},{key:\"createRace\",value:function(){var _createRace=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e){var restURL;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:e.preventDefault();restURL=\"/rest/races/\";_context3.next=4;return fetch(restURL,{method:\"POST\",credentials:'include',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({name:this.state.name,maxDrivers:this.state.maxDrivers,race_date:this.state.date,eor_date:this.state.eorDate,classes:this.state.classes,organizor:{id:this.state.profiledata.id},circuit:{id:this.state.circuitId}})}).then(function(response){if(response.status===201){window.alert(\"Race created\");}else{window.alert(\"Something went wrong.\");}});case 4:case\"end\":return _context3.stop();}}},_callee3,this);}));function createRace(_x){return _createRace.apply(this,arguments);}return createRace;}()},{key:\"handleChangeName\",value:function handleChangeName(value){this.setState({name:value});}},{key:\"handleChangeCircuit\",value:function handleChangeCircuit(value){this.setState({circuitId:value});}},{key:\"handleChangeDate\",value:function handleChangeDate(value){this.setState({date:value});}},{key:\"handleChangeEorDate\",value:function handleChangeEorDate(value){this.setState({eorDate:value});}},{key:\"handleChangeMaxDrivers\",value:function handleChangeMaxDrivers(value){this.setState({maxDrivers:value});}},{key:\"handleChangeClasses\",value:function handleChangeClasses(target){if(target.checked){this.state.classes.push(target.value);}else{for(var i=0;i<this.state.classes.length;i++){if(this.state.classes[i]===target.value){this.state.classes.splice(i,1);}}}console.log(this.state.classes);}},{key:\"componentDidMount\",value:function componentDidMount(){this.fetchCircuits();this.fetchUser();}},{key:\"render\",value:function render(){var _this4=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"CreateRace\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Create a new race\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"race-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"name\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Name : \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:this.state.name,className:\"name-input\",onChange:function onChange(event){return _this4.handleChangeName(event.target.value);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"circuit\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Circuit : \"}),/*#__PURE__*/_jsx(\"select\",{name:\"circuit-select\",className:\"circuit-select\",onChange:function onChange(event){return _this4.handleChangeCircuit(event.target.value);},children:this.state.circuitOptions})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"date\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Date : \"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:this.state.date,className:\"date-input\",onChange:function onChange(event){return _this4.handleChangeDate(event.target.value);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"eorDate\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"End of registrations : \"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:this.state.eorDate,className:\"eorDate-input\",onChange:function onChange(event){return _this4.handleChangeEorDate(event.target.value);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"maxDrivers\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Max drivers : \"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:this.state.maxDrivers,className:\"maxDrivers-input\",onChange:function onChange(event){return _this4.handleChangeMaxDrivers(event.target.value);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"classes\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Select classes : \"}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:'GT3',onChange:function onChange(event){return _this4.handleChangeClasses(event.target);}}),\"GT3\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:'GT4',onChange:function onChange(event){return _this4.handleChangeClasses(event.target);}}),\"GT4\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:'LMP2',onChange:function onChange(event){return _this4.handleChangeClasses(event.target);}}),\"LMP2\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:'LMP1',onChange:function onChange(event){return _this4.handleChangeClasses(event.target);}}),\"LMP1\"]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"create-button\",onClick:function onClick(e){return _this4.createRace(e);},children:\"Create race\"})]})]});}}]);return CreateRace;}(Component);export default CreateRace;","map":{"version":3,"sources":["E:/School/Bc/bakalarka/appka/race-react/src/components/CreateRace.js"],"names":["React","Component","CreateRace","props","state","name","circuitId","date","eorDate","classes","maxDrivers","fetchedCircuits","circuitOptions","profiledata","createRace","bind","restURL","fetch","method","credentials","headers","mode","then","response","json","data","setState","forEach","circuit","prevState","id","location","e","preventDefault","body","JSON","stringify","race_date","eor_date","organizor","status","window","alert","value","target","checked","push","i","length","splice","console","log","fetchCircuits","fetchUser","event","handleChangeName","handleChangeCircuit","handleChangeDate","handleChangeEorDate","handleChangeMaxDrivers","handleChangeClasses"],"mappings":"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","sourcesContent":["import '../styles/CreateRace.css';\r\nimport React, { Component } from \"react\";\r\n\r\nclass CreateRace extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            circuitId: \"\",\r\n            date: \"\",\r\n            eorDate: \"\",\r\n            classes: [],\r\n            maxDrivers: \"\",\r\n            fetchedCircuits: [],\r\n            circuitOptions: [],\r\n            profiledata: [],\r\n            classes: []\r\n        }\r\n        this.createRace = this.createRace.bind(this);\r\n    }\r\n    async fetchUser() {\r\n        let restURL = \"/rest/users/current\";\r\n        await fetch(restURL, {\r\n            method: \"GET\",\r\n            credentials: 'include',\r\n            headers: {\r\n                mode: 'no-cors',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                this.setState({ profiledata: data });\r\n            })\r\n    }\r\n    async fetchCircuits() {\r\n        const restURL = \"/rest/circuits/\";\r\n        await fetch(restURL, {\r\n            headers: {\r\n                mode: 'no-cors',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(data => {\r\n\r\n            data.forEach(circuit => {\r\n                this.setState(prevState =>\r\n                ({ circuitOptions: [prevState.circuitOptions, <option key={circuit.id} value={circuit.id}>{circuit.name} - {circuit.location}</ option>] }\r\n                ));\r\n            })\r\n            if (data[0]) {\r\n                this.setState({ circuitId: data[0].id });\r\n            }\r\n        })\r\n\r\n    }\r\n    async createRace(e) {\r\n        e.preventDefault();\r\n        const restURL = \"/rest/races/\";\r\n        await fetch(restURL, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                maxDrivers: this.state.maxDrivers,\r\n                race_date: this.state.date,\r\n                eor_date: this.state.eorDate,\r\n                classes: this.state.classes,\r\n                organizor: {\r\n                    id: this.state.profiledata.id\r\n                },\r\n                circuit: {\r\n                    id: this.state.circuitId\r\n                }\r\n            })\r\n        }).then(response => {\r\n            if (response.status === 201) {\r\n                window.alert(\"Race created\");\r\n            }\r\n            else {\r\n                window.alert(\"Something went wrong.\")\r\n            }\r\n        })\r\n    }\r\n    handleChangeName(value) {\r\n        this.setState({ name: value });\r\n    }\r\n    handleChangeCircuit(value) {\r\n        this.setState({ circuitId: value });\r\n    }\r\n    handleChangeDate(value) {\r\n        this.setState({ date: value });\r\n    }\r\n    handleChangeEorDate(value) {\r\n        this.setState({ eorDate: value });\r\n    }\r\n    handleChangeMaxDrivers(value) {\r\n        this.setState({ maxDrivers: value });\r\n    }\r\n    handleChangeClasses(target) {\r\n        if (target.checked) {\r\n            this.state.classes.push(target.value);\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.state.classes.length; i++) {\r\n                if (this.state.classes[i] === target.value) {\r\n                    this.state.classes.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        console.log(this.state.classes)\r\n    };\r\n    componentDidMount() {\r\n        this.fetchCircuits();\r\n        this.fetchUser();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CreateRace\">\r\n                <h2>Create a new race</h2>\r\n                <form className='race-form'>\r\n                    <div className=\"name\">\r\n                        <p>Name : </p>\r\n                        <input type=\"text\" value={this.state.name}\r\n                            className=\"name-input\"\r\n                            onChange={event => this.handleChangeName(event.target.value)} required />\r\n                    </div>\r\n                    <div className=\"circuit\">\r\n                        <p>Circuit : </p>\r\n                        <select name=\"circuit-select\" className=\"circuit-select\"\r\n                            onChange={event => this.handleChangeCircuit(event.target.value)}>\r\n                            {this.state.circuitOptions}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"date\">\r\n                        <p>Date : </p>\r\n                        <input type=\"date\" value={this.state.date}\r\n                            className=\"date-input\"\r\n                            onChange={event => this.handleChangeDate(event.target.value)} required />\r\n                    </div>\r\n                    <div className=\"eorDate\">\r\n                        <p>End of registrations : </p>\r\n                        <input type=\"date\" value={this.state.eorDate}\r\n                            className=\"eorDate-input\"\r\n                            onChange={event => this.handleChangeEorDate(event.target.value)} required />\r\n                    </div>\r\n                    <div className=\"maxDrivers\">\r\n                        <p>Max drivers : </p>\r\n                        <input type=\"number\" value={this.state.maxDrivers}\r\n                            className=\"maxDrivers-input\"\r\n                            onChange={event => this.handleChangeMaxDrivers(event.target.value)} required />\r\n                    </div>\r\n                    <div className=\"classes\">\r\n                        <p>Select classes : </p>\r\n                        <input type=\"checkbox\" value={'GT3'} onChange={event => this.handleChangeClasses(event.target)} />GT3\r\n                        <input type=\"checkbox\" value={'GT4'} onChange={event => this.handleChangeClasses(event.target)} />GT4\r\n                        <input type=\"checkbox\" value={'LMP2'} onChange={event => this.handleChangeClasses(event.target)} />LMP2\r\n                        <input type=\"checkbox\" value={'LMP1'} onChange={event => this.handleChangeClasses(event.target)} />LMP1\r\n                    </div>\r\n                    <button type=\"submit\" className=\"create-button\" onClick={e => this.createRace(e)}>Create race</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateRace;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from\"E:/School/Bcc/bakalarka/appka/race-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"E:/School/Bcc/bakalarka/appka/race-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"E:\\\\School\\\\Bcc\\\\bakalarka\\\\appka\\\\race-react\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState}from\"react\";import'../styles/Teams.css';import Team from\"../components/Team\";import JoinRequest from\"../components/JoinRequest\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Teams(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),teams=_useState2[0],setTeams=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),profileData=_useState4[0],setProfileData=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),myTeam=_useState6[0],setMyTeam=_useState6[1];function fetchUser(){return _fetchUser.apply(this,arguments);}function _fetchUser(){_fetchUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var restURL;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:restURL=\"http://localhost:8081/race/rest/users/current\";_context.next=3;return fetch(restURL,{method:\"GET\",credentials:'include',headers:{mode:'no-cors','Content-Type':'application/json'}}).then(function(response){return response.json();}).then(function(data){setProfileData(data);});case 3:case\"end\":return _context.stop();}}},_callee);}));return _fetchUser.apply(this,arguments);}function fetchMyTeam(){return _fetchMyTeam.apply(this,arguments);}function _fetchMyTeam(){_fetchMyTeam=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var restURL;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:restURL=\"http://localhost:8081/race/rest/teams/myTeam\";_context2.next=3;return fetch(restURL,{method:\"GET\",credentials:'include',headers:{mode:'no-cors','Content-Type':'application/json'}}).then(function(response){return response.json();}).then(function(data){setMyTeam(data);});case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _fetchMyTeam.apply(this,arguments);}function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var restURL;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:restURL=\"http://localhost:8081/race/rest/teams/\";_context3.next=3;return fetch(restURL,{headers:{method:\"GET\",'Content-Type':'application/json'}}).then(function(response){return response.json();}).then(function(data){setTeams(data);});case 3:case\"end\":return _context3.stop();}}},_callee3);}));return _fetchData.apply(this,arguments);}useEffect(function(){fetchMyTeam();fetchData();fetchUser();},[]);function renderMyTeam(){if(myTeam.id!=null){var joinRequests=[];if(myTeam.teamOwner.id===profileData.id){myTeam.joinRequests.forEach(function(req){if(req.status===\"PENDING\"){joinRequests.push(/*#__PURE__*/_jsx(JoinRequest,{data:req,team:myTeam},req.id));}});}var members=[];myTeam.memberships.forEach(function(mem){if(mem.status==='ACTIVE'){members.push(/*#__PURE__*/_jsxs(\"p\",{children:[mem.user.firstName,\" \",mem.user.lastName]},mem.membershipId.membership_userid));}});return/*#__PURE__*/_jsxs(\"div\",{className:\"myTeam\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"My team\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"Team\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"Name\",children:[\"Name : \",myTeam.name]}),/*#__PURE__*/_jsx(\"p\",{className:\"MyTeammMebers\",children:\"Members :\"}),members,/*#__PURE__*/_jsx(\"p\",{className:\"MyTeammRequests\",children:\"Join requests :\"}),joinRequests]})]});}}var teamList=[];teams.forEach(function(team){teamList.push(/*#__PURE__*/_jsx(Team,{data:team,user:profileData},team.id));});return/*#__PURE__*/_jsx(\"div\",{className:\"Page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"Teams\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"/newTeam\",children:\"NEW TEAM\"}),renderMyTeam(),/*#__PURE__*/_jsx(\"h2\",{children:\"Other teams\"}),teamList]})});}export default Teams;","map":{"version":3,"sources":["E:/School/Bcc/bakalarka/appka/race-react/src/pages/Teams.js"],"names":["React","useEffect","useState","Team","JoinRequest","Teams","teams","setTeams","profileData","setProfileData","myTeam","setMyTeam","fetchUser","restURL","fetch","method","credentials","headers","mode","then","response","json","data","fetchMyTeam","fetchData","renderMyTeam","id","joinRequests","teamOwner","forEach","req","status","push","members","memberships","mem","user","firstName","lastName","membershipId","membership_userid","name","teamList","team"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport '../styles/Teams.css';\r\nimport Team from \"../components/Team\";\r\nimport JoinRequest from \"../components/JoinRequest\";\r\n\r\nfunction Teams() {\r\n    const [teams, setTeams] = useState([])\r\n    const [profileData, setProfileData] = useState([])\r\n    const [myTeam, setMyTeam] = useState([])\r\n\r\n    async function fetchUser() {\r\n        let restURL = \"http://localhost:8081/race/rest/users/current\";\r\n        await fetch(restURL, {\r\n            method: \"GET\",\r\n            credentials: 'include',\r\n            headers: {\r\n                mode: 'no-cors',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                setProfileData(data);\r\n            })\r\n    }\r\n    async function fetchMyTeam() {\r\n        let restURL = \"http://localhost:8081/race/rest/teams/myTeam\";\r\n        await fetch(restURL, {\r\n            method: \"GET\",\r\n            credentials: 'include',\r\n            headers: {\r\n                mode: 'no-cors',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                setMyTeam(data);\r\n            })\r\n    }\r\n\r\n    async function fetchData() {\r\n        let restURL = \"http://localhost:8081/race/rest/teams/\";\r\n        await fetch(restURL, {\r\n            headers: {\r\n                method: \"GET\",\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                setTeams(data)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchMyTeam()\r\n        fetchData()\r\n        fetchUser()\r\n    }, [])\r\n\r\n\r\n\r\n    function renderMyTeam() {\r\n        if (myTeam.id != null) {\r\n            let joinRequests = []\r\n            if(myTeam.teamOwner.id === profileData.id){\r\n                myTeam.joinRequests.forEach(req => {\r\n                    if (req.status === \"PENDING\") {\r\n                        joinRequests.push(<JoinRequest key={req.id} data={req} team={myTeam} />)\r\n                    }\r\n    \r\n                })\r\n            }\r\n\r\n            let members = []\r\n            myTeam.memberships.forEach(mem => {\r\n                if (mem.status === 'ACTIVE') {\r\n                    members.push(<p key={mem.membershipId.membership_userid}>{mem.user.firstName} {mem.user.lastName}</p>)\r\n                }\r\n            })\r\n            return (\r\n                <div className=\"myTeam\">\r\n                    <h2>My team</h2>\r\n                    <div className=\"Team\">\r\n                        <p className=\"Name\">\r\n                            Name : {myTeam.name}\r\n                        </p>\r\n                        <p className=\"MyTeammMebers\">\r\n                            Members :\r\n                        </p>\r\n                        {members}\r\n                        <p className=\"MyTeammRequests\">\r\n                            Join requests :\r\n                        </p>\r\n                        {joinRequests}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n    let teamList = [];\r\n    teams.forEach(team => {\r\n        teamList.push(\r\n            <Team key={team.id} data={team} user={profileData} />\r\n        )\r\n    });\r\n    return (\r\n        <div className=\"Page\">\r\n            <div className=\"Teams\">\r\n                <a href=\"/newTeam\">NEW TEAM</a>\r\n                {renderMyTeam()}\r\n                <h2>Other teams</h2>\r\n                {teamList}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Teams;\r\n"]},"metadata":{},"sourceType":"module"}
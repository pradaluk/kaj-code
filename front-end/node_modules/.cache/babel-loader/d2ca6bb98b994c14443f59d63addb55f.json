{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\Bc\\\\appka\\\\race-react\\\\src\\\\components\\\\pages\\\\Home.js\";\nimport CreateRace from '../CreateRace';\nimport AddCircuit from \"../AddCircuit\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFile = e => {\n      const content = e.target.result;\n      console.log(content); // You can set content in state and show it in render.\n    };\n\n    this.handleChangeFile = file => {\n      let fileData = new FileReader();\n      fileData.onloadend = this.handleFile;\n      fileData.readAsText(file);\n    };\n\n    this.downloadTxtFile = () => {\n      const element = document.createElement(\"a\");\n      const file = new Blob([\"test\"], {\n        type: 'text/plain'\n      });\n      element.href = URL.createObjectURL(file);\n      element.download = \"myFile.txt\";\n      document.body.appendChild(element); // Required for this to work in FireFox\n\n      element.click();\n    };\n\n    this.state = {\n      isLoggedIn: false,\n      profileData: []\n    };\n  }\n\n  async checkLoggedIn() {\n    let restURL = \"http://localhost:8081/race/rest/users/isLoggedIn\";\n    await fetch(restURL, {\n      method: \"GET\",\n      credentials: 'include',\n      headers: {\n        mode: 'no-cors',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState({\n        isLoggedIn: data\n      });\n    });\n    this.fetchUser();\n  }\n\n  componentDidMount() {\n    this.checkLoggedIn();\n  }\n\n  async fetchUser() {\n    if (this.state.isLoggedIn) {\n      let restURL = \"http://localhost:8081/race/rest/users/current\";\n      await fetch(restURL, {\n        method: \"GET\",\n        credentials: 'include',\n        headers: {\n          mode: 'no-cors',\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        this.setState({\n          profileData: data\n        });\n      });\n    }\n  }\n\n  render() {\n    if (this.state.isLoggedIn) {\n      console.log(this.state.profileData);\n\n      if (this.state.profileData.role === \"ADMIN\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Home\",\n          children: [/*#__PURE__*/_jsxDEV(CreateRace, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddCircuit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this);\n      } else if (this.state.profileData.role === \"ORGANIZOR\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Home\",\n          children: /*#__PURE__*/_jsxDEV(CreateRace, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to the app\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".txt\",\n          onChange: e => this.handleChangeFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"myInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.downloadTxtFile,\n          children: \"Download txt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["E:/School/Bc/appka/race-react/src/components/pages/Home.js"],"names":["CreateRace","AddCircuit","Component","Home","constructor","props","handleFile","e","content","target","result","console","log","handleChangeFile","file","fileData","FileReader","onloadend","readAsText","downloadTxtFile","element","document","createElement","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","state","isLoggedIn","profileData","checkLoggedIn","restURL","fetch","method","credentials","headers","mode","then","response","json","data","setState","fetchUser","componentDidMount","render","role","files"],"mappings":";AACA,OAAOA,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkDnBC,UAlDmB,GAkDLC,CAAD,IAAO;AAClB,YAAMC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASC,MAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAFkB,CAGlB;AACD,KAtDkB;;AAAA,SAwDnBK,gBAxDmB,GAwDCC,IAAD,IAAU;AAC3B,UAAIC,QAAQ,GAAG,IAAIC,UAAJ,EAAf;AACAD,MAAAA,QAAQ,CAACE,SAAT,GAAqB,KAAKX,UAA1B;AACAS,MAAAA,QAAQ,CAACG,UAAT,CAAoBJ,IAApB;AACD,KA5DkB;;AAAA,SA6DnBK,eA7DmB,GA6DD,MAAM;AACtB,YAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAhB;AACA,YAAMR,IAAI,GAAG,IAAIS,IAAJ,CAAS,CAAC,MAAD,CAAT,EAAmB;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAnB,CAAb;AACAJ,MAAAA,OAAO,CAACK,IAAR,GAAeC,GAAG,CAACC,eAAJ,CAAoBb,IAApB,CAAf;AACAM,MAAAA,OAAO,CAACQ,QAAR,GAAmB,YAAnB;AACAP,MAAAA,QAAQ,CAACQ,IAAT,CAAcC,WAAd,CAA0BV,OAA1B,EALsB,CAKc;;AACpCA,MAAAA,OAAO,CAACW,KAAR;AACD,KApEkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,KADD;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AACkB,QAAbC,aAAa,GAAG;AACpB,QAAIC,OAAO,GAAG,kDAAd;AACA,UAAMC,KAAK,CAACD,OAAD,EAAU;AACnBE,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,WAAW,EAAE,SAFM;AAGnBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,SADC;AAEP,wBAAgB;AAFT;AAHU,KAAV,CAAL,CAQHC,IARG,CAQEC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAVG,EAWHF,IAXG,CAWEG,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AAAEb,QAAAA,UAAU,EAAEY;AAAd,OAAd;AACD,KAbG,CAAN;AAcA,SAAKE,SAAL;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKb,aAAL;AACD;;AAEc,QAATY,SAAS,GAAG;AAChB,QAAI,KAAKf,KAAL,CAAWC,UAAf,EAA2B;AACzB,UAAIG,OAAO,GAAG,+CAAd;AACA,YAAMC,KAAK,CAACD,OAAD,EAAU;AACnBE,QAAAA,MAAM,EAAE,KADW;AAEnBC,QAAAA,WAAW,EAAE,SAFM;AAGnBC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,SADC;AAEP,0BAAgB;AAFT;AAHU,OAAV,CAAL,CAQHC,IARG,CAQEC,QAAQ,IAAI;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAVG,EAWHF,IAXG,CAWEG,IAAI,IAAI;AACZ,aAAKC,QAAL,CAAc;AAAEZ,UAAAA,WAAW,EAAEW;AAAf,SAAd;AACD,OAbG,CAAN;AAcD;AACF;;AAqBDI,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKjB,KAAL,CAAWC,UAAf,EAA2B;AACzBtB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKoB,KAAL,CAAWE,WAAvB;;AACA,UAAI,KAAKF,KAAL,CAAWE,WAAX,CAAuBgB,IAAvB,KAAgC,OAApC,EAA6C;AAC3C,4BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OAPD,MAOO,IAAI,KAAKlB,KAAL,CAAWE,WAAX,CAAuBgB,IAAvB,KAAgC,WAApC,EAAiD;AACtD,4BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;AACF,KAhBD,MAgBO;AACL,0BACE;AAAA,gCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAL,eACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,MAAM,EAAC,MAA1B;AAAiC,UAAA,QAAQ,EAAE3C,CAAC,IAC1C,KAAKM,gBAAL,CAAsBN,CAAC,CAACE,MAAF,CAAS0C,KAAT,CAAe,CAAf,CAAtB;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAO,UAAA,EAAE,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,OAAO,EAAE,KAAKhC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AASD;AACF;;AAlG0B;;AAsG7B,eAAehB,IAAf","sourcesContent":["\r\nimport CreateRace from '../CreateRace';\r\nimport AddCircuit from \"../AddCircuit\";\r\nimport { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoggedIn: false,\r\n      profileData: [],\r\n    }\r\n  }\r\n  async checkLoggedIn() {\r\n    let restURL = \"http://localhost:8081/race/rest/users/isLoggedIn\";\r\n    await fetch(restURL, {\r\n      method: \"GET\",\r\n      credentials: 'include',\r\n      headers: {\r\n        mode: 'no-cors',\r\n        'Content-Type': 'application/json',\r\n      }\r\n    })\r\n      .then(response => {\r\n        return response.json()\r\n      })\r\n      .then(data => {\r\n        this.setState({ isLoggedIn: data });\r\n      })\r\n    this.fetchUser()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkLoggedIn()\r\n  }\r\n\r\n  async fetchUser() {\r\n    if (this.state.isLoggedIn) {\r\n      let restURL = \"http://localhost:8081/race/rest/users/current\";\r\n      await fetch(restURL, {\r\n        method: \"GET\",\r\n        credentials: 'include',\r\n        headers: {\r\n          mode: 'no-cors',\r\n          'Content-Type': 'application/json',\r\n        }\r\n      })\r\n        .then(response => {\r\n          return response.json()\r\n        })\r\n        .then(data => {\r\n          this.setState({ profileData: data });\r\n        })\r\n    }\r\n  }\r\n\r\n  handleFile = (e) => {\r\n    const content = e.target.result;\r\n    console.log(content)\r\n    // You can set content in state and show it in render.\r\n  }\r\n  \r\n  handleChangeFile = (file) => {\r\n    let fileData = new FileReader();\r\n    fileData.onloadend = this.handleFile;\r\n    fileData.readAsText(file);\r\n  }\r\n  downloadTxtFile = () => {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([\"test\"], {type: 'text/plain'});\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"myFile.txt\";\r\n    document.body.appendChild(element); // Required for this to work in FireFox\r\n    element.click();\r\n  }\r\n  render() {\r\n    if (this.state.isLoggedIn) {\r\n      console.log(this.state.profileData)\r\n      if (this.state.profileData.role === \"ADMIN\") {\r\n        return (\r\n          <div className=\"Home\">\r\n            <CreateRace />\r\n            <AddCircuit />\r\n          </div>\r\n        );\r\n      } else if (this.state.profileData.role === \"ORGANIZOR\") {\r\n        return (\r\n          <div className=\"Home\">\r\n            <CreateRace />\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <div><h2>Welcome to the app</h2>\r\n          <input type=\"file\" accept=\".txt\" onChange={e => \r\n            this.handleChangeFile(e.target.files[0])} /> \r\n          <input id=\"myInput\" />\r\n          <button onClick={this.downloadTxtFile}>Download txt</button>\r\n        </div>\r\n      \r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}